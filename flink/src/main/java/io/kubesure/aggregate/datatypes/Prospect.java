/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.kubesure.aggregate.datatypes;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Prospect extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2754758399589649412L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Prospect\",\"namespace\":\"io.kubesure.aggregate.datatypes\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"cif\",\"type\":\"string\"},{\"name\":\"account\",\"type\":\"string\"},{\"name\":\"firstName\",\"type\":\"string\"},{\"name\":\"lastName\",\"type\":\"string\"},{\"name\":\"fullName\",\"type\":\"string\"},{\"name\":\"match\",\"type\":\"boolean\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Prospect> ENCODER =
      new BinaryMessageEncoder<Prospect>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Prospect> DECODER =
      new BinaryMessageDecoder<Prospect>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Prospect> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Prospect> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Prospect> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Prospect>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Prospect to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Prospect from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Prospect instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Prospect fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private long id;
   private java.lang.CharSequence cif;
   private java.lang.CharSequence account;
   private java.lang.CharSequence firstName;
   private java.lang.CharSequence lastName;
   private java.lang.CharSequence fullName;
   private boolean match;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Prospect() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param cif The new value for cif
   * @param account The new value for account
   * @param firstName The new value for firstName
   * @param lastName The new value for lastName
   * @param fullName The new value for fullName
   * @param match The new value for match
   */
  public Prospect(java.lang.Long id, java.lang.CharSequence cif, java.lang.CharSequence account, java.lang.CharSequence firstName, java.lang.CharSequence lastName, java.lang.CharSequence fullName, java.lang.Boolean match) {
    this.id = id;
    this.cif = cif;
    this.account = account;
    this.firstName = firstName;
    this.lastName = lastName;
    this.fullName = fullName;
    this.match = match;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return cif;
    case 2: return account;
    case 3: return firstName;
    case 4: return lastName;
    case 5: return fullName;
    case 6: return match;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: cif = (java.lang.CharSequence)value$; break;
    case 2: account = (java.lang.CharSequence)value$; break;
    case 3: firstName = (java.lang.CharSequence)value$; break;
    case 4: lastName = (java.lang.CharSequence)value$; break;
    case 5: fullName = (java.lang.CharSequence)value$; break;
    case 6: match = (java.lang.Boolean)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'cif' field.
   * @return The value of the 'cif' field.
   */
  public java.lang.CharSequence getCif() {
    return cif;
  }


  /**
   * Sets the value of the 'cif' field.
   * @param value the value to set.
   */
  public void setCif(java.lang.CharSequence value) {
    this.cif = value;
  }

  /**
   * Gets the value of the 'account' field.
   * @return The value of the 'account' field.
   */
  public java.lang.CharSequence getAccount() {
    return account;
  }


  /**
   * Sets the value of the 'account' field.
   * @param value the value to set.
   */
  public void setAccount(java.lang.CharSequence value) {
    this.account = value;
  }

  /**
   * Gets the value of the 'firstName' field.
   * @return The value of the 'firstName' field.
   */
  public java.lang.CharSequence getFirstName() {
    return firstName;
  }


  /**
   * Sets the value of the 'firstName' field.
   * @param value the value to set.
   */
  public void setFirstName(java.lang.CharSequence value) {
    this.firstName = value;
  }

  /**
   * Gets the value of the 'lastName' field.
   * @return The value of the 'lastName' field.
   */
  public java.lang.CharSequence getLastName() {
    return lastName;
  }


  /**
   * Sets the value of the 'lastName' field.
   * @param value the value to set.
   */
  public void setLastName(java.lang.CharSequence value) {
    this.lastName = value;
  }

  /**
   * Gets the value of the 'fullName' field.
   * @return The value of the 'fullName' field.
   */
  public java.lang.CharSequence getFullName() {
    return fullName;
  }


  /**
   * Sets the value of the 'fullName' field.
   * @param value the value to set.
   */
  public void setFullName(java.lang.CharSequence value) {
    this.fullName = value;
  }

  /**
   * Gets the value of the 'match' field.
   * @return The value of the 'match' field.
   */
  public boolean getMatch() {
    return match;
  }


  /**
   * Sets the value of the 'match' field.
   * @param value the value to set.
   */
  public void setMatch(boolean value) {
    this.match = value;
  }

  /**
   * Creates a new Prospect RecordBuilder.
   * @return A new Prospect RecordBuilder
   */
  public static io.kubesure.aggregate.datatypes.Prospect.Builder newBuilder() {
    return new io.kubesure.aggregate.datatypes.Prospect.Builder();
  }

  /**
   * Creates a new Prospect RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Prospect RecordBuilder
   */
  public static io.kubesure.aggregate.datatypes.Prospect.Builder newBuilder(io.kubesure.aggregate.datatypes.Prospect.Builder other) {
    if (other == null) {
      return new io.kubesure.aggregate.datatypes.Prospect.Builder();
    } else {
      return new io.kubesure.aggregate.datatypes.Prospect.Builder(other);
    }
  }

  /**
   * Creates a new Prospect RecordBuilder by copying an existing Prospect instance.
   * @param other The existing instance to copy.
   * @return A new Prospect RecordBuilder
   */
  public static io.kubesure.aggregate.datatypes.Prospect.Builder newBuilder(io.kubesure.aggregate.datatypes.Prospect other) {
    if (other == null) {
      return new io.kubesure.aggregate.datatypes.Prospect.Builder();
    } else {
      return new io.kubesure.aggregate.datatypes.Prospect.Builder(other);
    }
  }

  /**
   * RecordBuilder for Prospect instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Prospect>
    implements org.apache.avro.data.RecordBuilder<Prospect> {

    private long id;
    private java.lang.CharSequence cif;
    private java.lang.CharSequence account;
    private java.lang.CharSequence firstName;
    private java.lang.CharSequence lastName;
    private java.lang.CharSequence fullName;
    private boolean match;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.kubesure.aggregate.datatypes.Prospect.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.cif)) {
        this.cif = data().deepCopy(fields()[1].schema(), other.cif);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.account)) {
        this.account = data().deepCopy(fields()[2].schema(), other.account);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.firstName)) {
        this.firstName = data().deepCopy(fields()[3].schema(), other.firstName);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.lastName)) {
        this.lastName = data().deepCopy(fields()[4].schema(), other.lastName);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.fullName)) {
        this.fullName = data().deepCopy(fields()[5].schema(), other.fullName);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.match)) {
        this.match = data().deepCopy(fields()[6].schema(), other.match);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
    }

    /**
     * Creates a Builder by copying an existing Prospect instance
     * @param other The existing instance to copy.
     */
    private Builder(io.kubesure.aggregate.datatypes.Prospect other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.cif)) {
        this.cif = data().deepCopy(fields()[1].schema(), other.cif);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.account)) {
        this.account = data().deepCopy(fields()[2].schema(), other.account);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.firstName)) {
        this.firstName = data().deepCopy(fields()[3].schema(), other.firstName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.lastName)) {
        this.lastName = data().deepCopy(fields()[4].schema(), other.lastName);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.fullName)) {
        this.fullName = data().deepCopy(fields()[5].schema(), other.fullName);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.match)) {
        this.match = data().deepCopy(fields()[6].schema(), other.match);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public io.kubesure.aggregate.datatypes.Prospect.Builder setId(long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public io.kubesure.aggregate.datatypes.Prospect.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'cif' field.
      * @return The value.
      */
    public java.lang.CharSequence getCif() {
      return cif;
    }


    /**
      * Sets the value of the 'cif' field.
      * @param value The value of 'cif'.
      * @return This builder.
      */
    public io.kubesure.aggregate.datatypes.Prospect.Builder setCif(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.cif = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'cif' field has been set.
      * @return True if the 'cif' field has been set, false otherwise.
      */
    public boolean hasCif() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'cif' field.
      * @return This builder.
      */
    public io.kubesure.aggregate.datatypes.Prospect.Builder clearCif() {
      cif = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'account' field.
      * @return The value.
      */
    public java.lang.CharSequence getAccount() {
      return account;
    }


    /**
      * Sets the value of the 'account' field.
      * @param value The value of 'account'.
      * @return This builder.
      */
    public io.kubesure.aggregate.datatypes.Prospect.Builder setAccount(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.account = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'account' field has been set.
      * @return True if the 'account' field has been set, false otherwise.
      */
    public boolean hasAccount() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'account' field.
      * @return This builder.
      */
    public io.kubesure.aggregate.datatypes.Prospect.Builder clearAccount() {
      account = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'firstName' field.
      * @return The value.
      */
    public java.lang.CharSequence getFirstName() {
      return firstName;
    }


    /**
      * Sets the value of the 'firstName' field.
      * @param value The value of 'firstName'.
      * @return This builder.
      */
    public io.kubesure.aggregate.datatypes.Prospect.Builder setFirstName(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.firstName = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'firstName' field has been set.
      * @return True if the 'firstName' field has been set, false otherwise.
      */
    public boolean hasFirstName() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'firstName' field.
      * @return This builder.
      */
    public io.kubesure.aggregate.datatypes.Prospect.Builder clearFirstName() {
      firstName = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastName' field.
      * @return The value.
      */
    public java.lang.CharSequence getLastName() {
      return lastName;
    }


    /**
      * Sets the value of the 'lastName' field.
      * @param value The value of 'lastName'.
      * @return This builder.
      */
    public io.kubesure.aggregate.datatypes.Prospect.Builder setLastName(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.lastName = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'lastName' field has been set.
      * @return True if the 'lastName' field has been set, false otherwise.
      */
    public boolean hasLastName() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'lastName' field.
      * @return This builder.
      */
    public io.kubesure.aggregate.datatypes.Prospect.Builder clearLastName() {
      lastName = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'fullName' field.
      * @return The value.
      */
    public java.lang.CharSequence getFullName() {
      return fullName;
    }


    /**
      * Sets the value of the 'fullName' field.
      * @param value The value of 'fullName'.
      * @return This builder.
      */
    public io.kubesure.aggregate.datatypes.Prospect.Builder setFullName(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.fullName = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'fullName' field has been set.
      * @return True if the 'fullName' field has been set, false otherwise.
      */
    public boolean hasFullName() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'fullName' field.
      * @return This builder.
      */
    public io.kubesure.aggregate.datatypes.Prospect.Builder clearFullName() {
      fullName = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'match' field.
      * @return The value.
      */
    public boolean getMatch() {
      return match;
    }


    /**
      * Sets the value of the 'match' field.
      * @param value The value of 'match'.
      * @return This builder.
      */
    public io.kubesure.aggregate.datatypes.Prospect.Builder setMatch(boolean value) {
      validate(fields()[6], value);
      this.match = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'match' field has been set.
      * @return True if the 'match' field has been set, false otherwise.
      */
    public boolean hasMatch() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'match' field.
      * @return This builder.
      */
    public io.kubesure.aggregate.datatypes.Prospect.Builder clearMatch() {
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Prospect build() {
      try {
        Prospect record = new Prospect();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.cif = fieldSetFlags()[1] ? this.cif : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.account = fieldSetFlags()[2] ? this.account : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.firstName = fieldSetFlags()[3] ? this.firstName : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.lastName = fieldSetFlags()[4] ? this.lastName : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.fullName = fieldSetFlags()[5] ? this.fullName : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.match = fieldSetFlags()[6] ? this.match : (java.lang.Boolean) defaultValue(fields()[6]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Prospect>
    WRITER$ = (org.apache.avro.io.DatumWriter<Prospect>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Prospect>
    READER$ = (org.apache.avro.io.DatumReader<Prospect>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeLong(this.id);

    out.writeString(this.cif);

    out.writeString(this.account);

    out.writeString(this.firstName);

    out.writeString(this.lastName);

    out.writeString(this.fullName);

    out.writeBoolean(this.match);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.id = in.readLong();

      this.cif = in.readString(this.cif instanceof Utf8 ? (Utf8)this.cif : null);

      this.account = in.readString(this.account instanceof Utf8 ? (Utf8)this.account : null);

      this.firstName = in.readString(this.firstName instanceof Utf8 ? (Utf8)this.firstName : null);

      this.lastName = in.readString(this.lastName instanceof Utf8 ? (Utf8)this.lastName : null);

      this.fullName = in.readString(this.fullName instanceof Utf8 ? (Utf8)this.fullName : null);

      this.match = in.readBoolean();

    } else {
      for (int i = 0; i < 7; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.id = in.readLong();
          break;

        case 1:
          this.cif = in.readString(this.cif instanceof Utf8 ? (Utf8)this.cif : null);
          break;

        case 2:
          this.account = in.readString(this.account instanceof Utf8 ? (Utf8)this.account : null);
          break;

        case 3:
          this.firstName = in.readString(this.firstName instanceof Utf8 ? (Utf8)this.firstName : null);
          break;

        case 4:
          this.lastName = in.readString(this.lastName instanceof Utf8 ? (Utf8)this.lastName : null);
          break;

        case 5:
          this.fullName = in.readString(this.fullName instanceof Utf8 ? (Utf8)this.fullName : null);
          break;

        case 6:
          this.match = in.readBoolean();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










