/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.kubesure.aggregate.datatypes;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Prospect company with registered prospect as shareholders */
@org.apache.avro.specific.AvroGenerated
public class ProspectCompany extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2265470836531000803L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ProspectCompany\",\"namespace\":\"io.kubesure.aggregate.datatypes\",\"doc\":\"Prospect company with registered prospect as shareholders\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"companyName\",\"type\":\"string\"},{\"name\":\"tradeLicenseNumber\",\"type\":\"string\"},{\"name\":\"match\",\"type\":\"boolean\"},{\"name\":\"eventTime\",\"type\":\"long\",\"logicalType\":\"local-timestamp-millis\"},{\"name\":\"shareHolders\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Prospect\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"cif\",\"type\":\"string\"},{\"name\":\"account\",\"type\":\"string\"},{\"name\":\"firstName\",\"type\":\"string\"},{\"name\":\"lastName\",\"type\":\"string\"},{\"name\":\"fullName\",\"type\":\"string\"},{\"name\":\"match\",\"type\":\"boolean\"}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ProspectCompany> ENCODER =
      new BinaryMessageEncoder<ProspectCompany>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ProspectCompany> DECODER =
      new BinaryMessageDecoder<ProspectCompany>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ProspectCompany> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ProspectCompany> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ProspectCompany> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ProspectCompany>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ProspectCompany to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ProspectCompany from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ProspectCompany instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ProspectCompany fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private long id;
   private java.lang.CharSequence companyName;
   private java.lang.CharSequence tradeLicenseNumber;
   private boolean match;
   private long eventTime;
   private java.util.List<io.kubesure.aggregate.datatypes.Prospect> shareHolders;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ProspectCompany() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param companyName The new value for companyName
   * @param tradeLicenseNumber The new value for tradeLicenseNumber
   * @param match The new value for match
   * @param eventTime The new value for eventTime
   * @param shareHolders The new value for shareHolders
   */
  public ProspectCompany(java.lang.Long id, java.lang.CharSequence companyName, java.lang.CharSequence tradeLicenseNumber, java.lang.Boolean match, java.lang.Long eventTime, java.util.List<io.kubesure.aggregate.datatypes.Prospect> shareHolders) {
    this.id = id;
    this.companyName = companyName;
    this.tradeLicenseNumber = tradeLicenseNumber;
    this.match = match;
    this.eventTime = eventTime;
    this.shareHolders = shareHolders;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return companyName;
    case 2: return tradeLicenseNumber;
    case 3: return match;
    case 4: return eventTime;
    case 5: return shareHolders;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: companyName = (java.lang.CharSequence)value$; break;
    case 2: tradeLicenseNumber = (java.lang.CharSequence)value$; break;
    case 3: match = (java.lang.Boolean)value$; break;
    case 4: eventTime = (java.lang.Long)value$; break;
    case 5: shareHolders = (java.util.List<io.kubesure.aggregate.datatypes.Prospect>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'companyName' field.
   * @return The value of the 'companyName' field.
   */
  public java.lang.CharSequence getCompanyName() {
    return companyName;
  }


  /**
   * Sets the value of the 'companyName' field.
   * @param value the value to set.
   */
  public void setCompanyName(java.lang.CharSequence value) {
    this.companyName = value;
  }

  /**
   * Gets the value of the 'tradeLicenseNumber' field.
   * @return The value of the 'tradeLicenseNumber' field.
   */
  public java.lang.CharSequence getTradeLicenseNumber() {
    return tradeLicenseNumber;
  }


  /**
   * Sets the value of the 'tradeLicenseNumber' field.
   * @param value the value to set.
   */
  public void setTradeLicenseNumber(java.lang.CharSequence value) {
    this.tradeLicenseNumber = value;
  }

  /**
   * Gets the value of the 'match' field.
   * @return The value of the 'match' field.
   */
  public boolean getMatch() {
    return match;
  }


  /**
   * Sets the value of the 'match' field.
   * @param value the value to set.
   */
  public void setMatch(boolean value) {
    this.match = value;
  }

  /**
   * Gets the value of the 'eventTime' field.
   * @return The value of the 'eventTime' field.
   */
  public long getEventTime() {
    return eventTime;
  }


  /**
   * Sets the value of the 'eventTime' field.
   * @param value the value to set.
   */
  public void setEventTime(long value) {
    this.eventTime = value;
  }

  /**
   * Gets the value of the 'shareHolders' field.
   * @return The value of the 'shareHolders' field.
   */
  public java.util.List<io.kubesure.aggregate.datatypes.Prospect> getShareHolders() {
    return shareHolders;
  }


  /**
   * Sets the value of the 'shareHolders' field.
   * @param value the value to set.
   */
  public void setShareHolders(java.util.List<io.kubesure.aggregate.datatypes.Prospect> value) {
    this.shareHolders = value;
  }

  /**
   * Creates a new ProspectCompany RecordBuilder.
   * @return A new ProspectCompany RecordBuilder
   */
  public static io.kubesure.aggregate.datatypes.ProspectCompany.Builder newBuilder() {
    return new io.kubesure.aggregate.datatypes.ProspectCompany.Builder();
  }

  /**
   * Creates a new ProspectCompany RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ProspectCompany RecordBuilder
   */
  public static io.kubesure.aggregate.datatypes.ProspectCompany.Builder newBuilder(io.kubesure.aggregate.datatypes.ProspectCompany.Builder other) {
    if (other == null) {
      return new io.kubesure.aggregate.datatypes.ProspectCompany.Builder();
    } else {
      return new io.kubesure.aggregate.datatypes.ProspectCompany.Builder(other);
    }
  }

  /**
   * Creates a new ProspectCompany RecordBuilder by copying an existing ProspectCompany instance.
   * @param other The existing instance to copy.
   * @return A new ProspectCompany RecordBuilder
   */
  public static io.kubesure.aggregate.datatypes.ProspectCompany.Builder newBuilder(io.kubesure.aggregate.datatypes.ProspectCompany other) {
    if (other == null) {
      return new io.kubesure.aggregate.datatypes.ProspectCompany.Builder();
    } else {
      return new io.kubesure.aggregate.datatypes.ProspectCompany.Builder(other);
    }
  }

  /**
   * RecordBuilder for ProspectCompany instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ProspectCompany>
    implements org.apache.avro.data.RecordBuilder<ProspectCompany> {

    private long id;
    private java.lang.CharSequence companyName;
    private java.lang.CharSequence tradeLicenseNumber;
    private boolean match;
    private long eventTime;
    private java.util.List<io.kubesure.aggregate.datatypes.Prospect> shareHolders;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.kubesure.aggregate.datatypes.ProspectCompany.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.companyName)) {
        this.companyName = data().deepCopy(fields()[1].schema(), other.companyName);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.tradeLicenseNumber)) {
        this.tradeLicenseNumber = data().deepCopy(fields()[2].schema(), other.tradeLicenseNumber);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.match)) {
        this.match = data().deepCopy(fields()[3].schema(), other.match);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.eventTime)) {
        this.eventTime = data().deepCopy(fields()[4].schema(), other.eventTime);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.shareHolders)) {
        this.shareHolders = data().deepCopy(fields()[5].schema(), other.shareHolders);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing ProspectCompany instance
     * @param other The existing instance to copy.
     */
    private Builder(io.kubesure.aggregate.datatypes.ProspectCompany other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.companyName)) {
        this.companyName = data().deepCopy(fields()[1].schema(), other.companyName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.tradeLicenseNumber)) {
        this.tradeLicenseNumber = data().deepCopy(fields()[2].schema(), other.tradeLicenseNumber);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.match)) {
        this.match = data().deepCopy(fields()[3].schema(), other.match);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.eventTime)) {
        this.eventTime = data().deepCopy(fields()[4].schema(), other.eventTime);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.shareHolders)) {
        this.shareHolders = data().deepCopy(fields()[5].schema(), other.shareHolders);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public io.kubesure.aggregate.datatypes.ProspectCompany.Builder setId(long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public io.kubesure.aggregate.datatypes.ProspectCompany.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'companyName' field.
      * @return The value.
      */
    public java.lang.CharSequence getCompanyName() {
      return companyName;
    }


    /**
      * Sets the value of the 'companyName' field.
      * @param value The value of 'companyName'.
      * @return This builder.
      */
    public io.kubesure.aggregate.datatypes.ProspectCompany.Builder setCompanyName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.companyName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'companyName' field has been set.
      * @return True if the 'companyName' field has been set, false otherwise.
      */
    public boolean hasCompanyName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'companyName' field.
      * @return This builder.
      */
    public io.kubesure.aggregate.datatypes.ProspectCompany.Builder clearCompanyName() {
      companyName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'tradeLicenseNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getTradeLicenseNumber() {
      return tradeLicenseNumber;
    }


    /**
      * Sets the value of the 'tradeLicenseNumber' field.
      * @param value The value of 'tradeLicenseNumber'.
      * @return This builder.
      */
    public io.kubesure.aggregate.datatypes.ProspectCompany.Builder setTradeLicenseNumber(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.tradeLicenseNumber = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'tradeLicenseNumber' field has been set.
      * @return True if the 'tradeLicenseNumber' field has been set, false otherwise.
      */
    public boolean hasTradeLicenseNumber() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'tradeLicenseNumber' field.
      * @return This builder.
      */
    public io.kubesure.aggregate.datatypes.ProspectCompany.Builder clearTradeLicenseNumber() {
      tradeLicenseNumber = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'match' field.
      * @return The value.
      */
    public boolean getMatch() {
      return match;
    }


    /**
      * Sets the value of the 'match' field.
      * @param value The value of 'match'.
      * @return This builder.
      */
    public io.kubesure.aggregate.datatypes.ProspectCompany.Builder setMatch(boolean value) {
      validate(fields()[3], value);
      this.match = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'match' field has been set.
      * @return True if the 'match' field has been set, false otherwise.
      */
    public boolean hasMatch() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'match' field.
      * @return This builder.
      */
    public io.kubesure.aggregate.datatypes.ProspectCompany.Builder clearMatch() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventTime' field.
      * @return The value.
      */
    public long getEventTime() {
      return eventTime;
    }


    /**
      * Sets the value of the 'eventTime' field.
      * @param value The value of 'eventTime'.
      * @return This builder.
      */
    public io.kubesure.aggregate.datatypes.ProspectCompany.Builder setEventTime(long value) {
      validate(fields()[4], value);
      this.eventTime = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'eventTime' field has been set.
      * @return True if the 'eventTime' field has been set, false otherwise.
      */
    public boolean hasEventTime() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'eventTime' field.
      * @return This builder.
      */
    public io.kubesure.aggregate.datatypes.ProspectCompany.Builder clearEventTime() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'shareHolders' field.
      * @return The value.
      */
    public java.util.List<io.kubesure.aggregate.datatypes.Prospect> getShareHolders() {
      return shareHolders;
    }


    /**
      * Sets the value of the 'shareHolders' field.
      * @param value The value of 'shareHolders'.
      * @return This builder.
      */
    public io.kubesure.aggregate.datatypes.ProspectCompany.Builder setShareHolders(java.util.List<io.kubesure.aggregate.datatypes.Prospect> value) {
      validate(fields()[5], value);
      this.shareHolders = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'shareHolders' field has been set.
      * @return True if the 'shareHolders' field has been set, false otherwise.
      */
    public boolean hasShareHolders() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'shareHolders' field.
      * @return This builder.
      */
    public io.kubesure.aggregate.datatypes.ProspectCompany.Builder clearShareHolders() {
      shareHolders = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ProspectCompany build() {
      try {
        ProspectCompany record = new ProspectCompany();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.companyName = fieldSetFlags()[1] ? this.companyName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.tradeLicenseNumber = fieldSetFlags()[2] ? this.tradeLicenseNumber : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.match = fieldSetFlags()[3] ? this.match : (java.lang.Boolean) defaultValue(fields()[3]);
        record.eventTime = fieldSetFlags()[4] ? this.eventTime : (java.lang.Long) defaultValue(fields()[4]);
        record.shareHolders = fieldSetFlags()[5] ? this.shareHolders : (java.util.List<io.kubesure.aggregate.datatypes.Prospect>) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ProspectCompany>
    WRITER$ = (org.apache.avro.io.DatumWriter<ProspectCompany>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ProspectCompany>
    READER$ = (org.apache.avro.io.DatumReader<ProspectCompany>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeLong(this.id);

    out.writeString(this.companyName);

    out.writeString(this.tradeLicenseNumber);

    out.writeBoolean(this.match);

    out.writeLong(this.eventTime);

    long size0 = this.shareHolders.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (io.kubesure.aggregate.datatypes.Prospect e0: this.shareHolders) {
      actualSize0++;
      out.startItem();
      e0.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.id = in.readLong();

      this.companyName = in.readString(this.companyName instanceof Utf8 ? (Utf8)this.companyName : null);

      this.tradeLicenseNumber = in.readString(this.tradeLicenseNumber instanceof Utf8 ? (Utf8)this.tradeLicenseNumber : null);

      this.match = in.readBoolean();

      this.eventTime = in.readLong();

      long size0 = in.readArrayStart();
      java.util.List<io.kubesure.aggregate.datatypes.Prospect> a0 = this.shareHolders;
      if (a0 == null) {
        a0 = new SpecificData.Array<io.kubesure.aggregate.datatypes.Prospect>((int)size0, SCHEMA$.getField("shareHolders").schema());
        this.shareHolders = a0;
      } else a0.clear();
      SpecificData.Array<io.kubesure.aggregate.datatypes.Prospect> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<io.kubesure.aggregate.datatypes.Prospect>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          io.kubesure.aggregate.datatypes.Prospect e0 = (ga0 != null ? ga0.peek() : null);
          if (e0 == null) {
            e0 = new io.kubesure.aggregate.datatypes.Prospect();
          }
          e0.customDecode(in);
          a0.add(e0);
        }
      }

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.id = in.readLong();
          break;

        case 1:
          this.companyName = in.readString(this.companyName instanceof Utf8 ? (Utf8)this.companyName : null);
          break;

        case 2:
          this.tradeLicenseNumber = in.readString(this.tradeLicenseNumber instanceof Utf8 ? (Utf8)this.tradeLicenseNumber : null);
          break;

        case 3:
          this.match = in.readBoolean();
          break;

        case 4:
          this.eventTime = in.readLong();
          break;

        case 5:
          long size0 = in.readArrayStart();
          java.util.List<io.kubesure.aggregate.datatypes.Prospect> a0 = this.shareHolders;
          if (a0 == null) {
            a0 = new SpecificData.Array<io.kubesure.aggregate.datatypes.Prospect>((int)size0, SCHEMA$.getField("shareHolders").schema());
            this.shareHolders = a0;
          } else a0.clear();
          SpecificData.Array<io.kubesure.aggregate.datatypes.Prospect> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<io.kubesure.aggregate.datatypes.Prospect>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              io.kubesure.aggregate.datatypes.Prospect e0 = (ga0 != null ? ga0.peek() : null);
              if (e0 == null) {
                e0 = new io.kubesure.aggregate.datatypes.Prospect();
              }
              e0.customDecode(in);
              a0.add(e0);
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










